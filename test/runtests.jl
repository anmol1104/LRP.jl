using LRP
using Revise
using Test
using Random

@testset "TSP.jl" begin
    K = 5
    instances = ["att48", "eil101", "ch150", "d198", "a280"]
    methods = [:cw_init, :nn_init, :random_init, :regret‚ÇÇinit, :regret‚ÇÉinit]
    œá‚Çí  = ObjectiveFunctionParameters(
        d = 0.                          ,
        v = 0.                          ,
        r = 0.                          ,
        c = 0.                          ,
    )
    œá   = ALNSParameters(
        kÃ≤   =   2                       ,
        kÃÖ   =   500                     ,
        kÃ≤‚Çõ  =   80                      ,
        kÃÖ‚Çõ  =   250                     ,   
        Œ®·µ£  =   [
                    :node_remove! , 
                    :worst_remove!  , 
                    :shaw_remove!
                ]                       , 
        Œ®·µ¢  =   [
                    :best_insert!   ,
                    :greedy_insert! ,
                    :regret‚ÇÇinsert! ,
                    :regret‚ÇÉinsert!
                ]                       ,
        Œ®‚Çõ  =   [
                    :move!              ,
                    :swap!
                ]                       ,
        œÉ‚ÇÅ  =   33                      ,
        œÉ‚ÇÇ  =   9                       ,
        œÉ‚ÇÉ  =   13                      ,
        œâ   =   0.05                    ,
        œÑ   =   0.5                     ,
        ùúÉ   =   0.99975                 ,
        CÃ≤   =   30                      ,
        CÃÖ   =   60                      ,
        ŒºÃ≤   =   0.1                     ,
        ŒºÃÖ   =   0.4                     ,
        œÅ   =   0.1                     ,
        œá‚Çí  =   œá‚Çí  
    )
    for k ‚àà 1:K
        instance = instances[k]
        method = methods[k]
        println("\n Solving $instance")
        G = build(instance)
        s‚Çí= initialsolution(G, œá‚Çí, method)     
        @test isfeasible(s‚Çí)
        S = ALNS(s‚Çí, œá)
        s‚É∞ = S[end]
        @test isfeasible(s‚É∞)
        @test f(s‚É∞, œá‚Çí) ‚â§ f(s‚Çí, œá‚Çí)
    end
    return
end
