using LRP
using Revise
using Test
using Random

let
    # Vehicle Routing Problem with time-windows
    @testset "VRPTW" begin
        œá   = ALNSparameters(
            n   =   4                       ,
            k   =   250                     ,
            m   =   200                     ,
            j   =   125                     ,
            Œ®·µ£  =   [
                        :randomcustomer!    ,
                        :randomroute!       ,
                        :randomvehicle!     ,
                        :randomdepot!       ,
                        :relatedcustomer!   ,
                        :relatedroute!      ,
                        :relatedvehicle!    ,
                        :relateddepot!      ,
                        :worstcustomer!     ,
                        :worstroute!        ,
                        :worstvehicle!      ,
                        :worstdepot!
                    ]                       ,
            Œ®·µ¢  =   [
                        :best!              ,
                        :precise!           ,
                        :perturb!           ,
                        :regret2!           ,
                        :regret3!
                    ]                       ,
            Œ®‚Çó  =   [
                        :intraopt!          ,
                        :interopt!          ,
                        :movecustomer!      ,
                        :movedepot!         ,
                        :swapcustomers!     ,
                        :swapdepots!
                    ]                       ,
            œÉ‚ÇÅ  =   15                      ,
            œÉ‚ÇÇ  =   10                      ,
            œÉ‚ÇÉ  =   3                       ,
            œâ   =   0.05                    ,
            œÑ   =   0.5                     ,
            ùúÉ   =   0.9975                  ,
            CÃ≤   =   4                       ,
            CÃÖ   =   60                      ,
            ŒºÃ≤   =   0.1                     ,
            ŒºÃÖ   =   0.4                     ,
            œÅ   =   0.1
        )
        instances = ["r101", "c101"]
        methods = [:cluster, :random]
        for k ‚àà 1:2
            instance = instances[k]
            method = methods[k]
            println("\nSolving $instance")
            visualize(instance)
            G  = build(instance)
            s‚Çí = initialsolution(G, method)         
            S  = ALNS(œá, s‚Çí)
            s‚É∞  = S[end]
            visualize(s‚É∞)
            pltcnv(S)
            @test isfeasible(s‚É∞)
            @test f(s‚É∞) ‚â§ f(s‚Çí)
        end
    end

    # Location Routing Problem
    @testset "LRP" begin
        œá   = ALNSparameters(
            n   =   4                       ,
            k   =   250                     ,
            m   =   200                     ,
            j   =   125                     ,
            Œ®·µ£  =   [
                        :randomcustomer!    ,
                        :randomroute!       ,
                        :randomvehicle!     ,
                        :randomdepot!       ,
                        :relatedcustomer!   ,
                        :relatedroute!      ,
                        :relatedvehicle!    ,
                        :relateddepot!      ,
                        :worstcustomer!     ,
                        :worstroute!        ,
                        :worstvehicle!      ,
                        :worstdepot!
                    ]                       ,
            Œ®·µ¢  =   [
                        :best!              ,
                        :precise!           ,
                        :perturb!           ,
                        :regret2!           ,
                        :regret3!
                    ]                       ,
            Œ®‚Çó  =   [
                        :intraopt!          ,
                        :interopt!          ,
                        :movecustomer!      ,
                        :movedepot!         ,
                        :swapcustomers!     ,
                        :swapdepots!
                    ]                       ,
            œÉ‚ÇÅ  =   15                      ,
            œÉ‚ÇÇ  =   10                      ,
            œÉ‚ÇÉ  =   3                       ,
            œâ   =   0.05                    ,
            œÑ   =   0.5                     ,
            ùúÉ   =   0.9975                  ,
            CÃ≤   =   4                       ,
            CÃÖ   =   60                      ,
            ŒºÃ≤   =   0.1                     ,
            ŒºÃÖ   =   0.4                     ,
            œÅ   =   0.1
        )
        instances = ["prins20-5-1", "prins50-5-1b"]
        methods = [:cluster, :random]
        for k ‚àà 1:2
            instance = instances[k]
            method = methods[k]
            println("\nSolving $instance")
            visualize(instance)
            G  = build(instance)
            s‚Çí = initialsolution(G, method)     
            S  = ALNS(œá, s‚Çí)
            s‚É∞  = S[end]
            visualize(s‚É∞)
            pltcnv(S)
            @test isfeasible(s‚É∞)
            @test f(s‚É∞) ‚â§ f(s‚Çí)
        end
    end
    return
end
        
